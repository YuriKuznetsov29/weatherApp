{"version":3,"file":"src_styles_main_css-src_js_changeLocation_js-src_js_constants_js.42ee807f53d56ca42dc5.js","mappings":"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qG;AACrG;AACA;;AAEA;;AAEA,4BAA4B,qGAAmB;AAC/C,wBAAwB,kHAAa;;AAErC,uBAAuB,uGAAa;AACpC;AACA,iBAAiB,+FAAM;AACvB,6BAA6B,sGAAkB;;AAE/C,aAAa,0GAAG,CAAC,qFAAO;;;;AAI+C;AACvE,OAAO,iEAAe,qFAAO,IAAI,4FAAc,GAAG,4FAAc,YAAY,EAAC;;;;;;;;;;;;;;;;AC1B5C;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B,EAAE,qDAAO;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,SAAS;AACrE;AACA,UAAU;AACV;AACA,4DAA4D,6BAA6B;AACzF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,SAAS;AACnE;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kEAAkE,oBAAoB;AACtF;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2CAA2C,UAAU,EAAE,gBAAgB;AACvE;AACA;AACA;AACA;AACA,0EAA0E,QAAQ;AAClF;AACA;AACA;AACA;AACA,uBAAuB;AACvB,mBAAmB;AACnB;AACA,WAAW;AACX,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,iEAAe,cAAc;;;;;;;;;;;;;;;ACjItB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvCO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;;ACJiC;AACjC;AACA;AACA;AACA,qBAAqB,8CAAO;AAC5B;AACA;AACA;AACA,sCAAsC,aAAa;AACnD,uCAAuC,cAAc;AACrD,yCAAyC,cAAc;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8CAAO,wDAAwD,KAAK;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS,GAAG,2BAA2B,gBAAgB,oBAAoB,GAAG,mBAAmB,QAAQ,YAAY;AAC1J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,KAAK,GAAG,uBAAuB,YAAY,gBAAgB,GAAG,eAAe,IAAI,QAAQ;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,UAAU;AACrC;AACA;AACA;AACA;AACA;AACA,2BAA2B,UAAU;AACrC;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8CAAO,oDAAoD,IAAI,aAAa,IAAI,mXAAmX,IAAI,YAAY,cAAc;AACtf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,YAAY;AACZ;AACA;AACA,iEAAe,OAAO","sources":["webpack://weatherapp/./src/styles/main.css","webpack://weatherapp/./src/styles/main.css?e80a","webpack://weatherapp/./src/js/changeLocation.js","webpack://weatherapp/./src/js/constants.js","webpack://weatherapp/./src/js/http.js","webpack://weatherapp/./src/js/services.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"*,\\r\\n*:before,\\r\\n*:after {\\r\\n    box-sizing: border-box;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n/* Container */\\r\\n.container {\\r\\n    width: 100%;\\r\\n    max-width: 1230px;\\r\\n    margin: 0 auto;\\r\\n    padding: 0 15px;\\r\\n}\\r\\n\\r\\n/* Background */\\r\\n.video-bg {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    min-width: 100%;\\r\\n    min-height: 100%;\\r\\n    z-index: -1000;\\r\\n}\\r\\n\\r\\n.background {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    min-width: 100%;\\r\\n    min-height: 100%;\\r\\n    z-index: -1000;\\r\\n    /* background-color: rgba(0, 0, 0, 0.2); */\\r\\n    background-color: rgba(83, 83, 83);\\r\\n}\\r\\n\\r\\n/* Header */\\r\\n.header {\\r\\n    height: 80px;\\r\\n    background-color: rgba(0, 0, 0, 0.3);\\r\\n\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    z-index: 1000;\\r\\n}\\r\\n\\r\\n.header__inner {\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    align-items: center;\\r\\n    height: 80px;\\r\\n    font-size: 16px;\\r\\n}\\r\\n\\r\\n/* Nav */\\r\\n.nav {\\r\\n    display: flex;\\r\\n    height: 100%;\\r\\n    font-size: 18px;\\r\\n}\\r\\n\\r\\n.nav__link {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    padding: 0 10px;\\r\\n    color: #fff;\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\n.nav__link:hover {\\r\\n    cursor: pointer;\\r\\n    background-color: #004AF2;\\r\\n}\\r\\n\\r\\n/* Location */\\r\\n.location {\\r\\n    color: #fff;\\r\\n}\\r\\n\\r\\n.location__get__btn:hover {\\r\\n    cursor: pointer;\\r\\n    text-decoration: underline;\\r\\n}\\r\\n\\r\\n.location__change__btn:hover {\\r\\n    cursor: pointer;\\r\\n    text-decoration: underline;\\r\\n}\\r\\n\\r\\n.location__change__wrapper {\\r\\n    position: relative;\\r\\n    display: block;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.errorMessage {\\r\\n    position: absolute;\\r\\n    top: 38px;\\r\\n    left: 0;\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n.location__change__find {\\r\\n    width: 200px;\\r\\n    position: absolute;\\r\\n    top: 38px;\\r\\n    background-color: #fff;\\r\\n}\\r\\n\\r\\n.finded-city {\\r\\n    padding: 5px;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.finded-city:hover {\\r\\n    cursor: pointer;\\r\\n    background-color: #004AF2;\\r\\n}\\r\\n\\r\\n.input-city {\\r\\n    width: 200px;\\r\\n    height: 25px;\\r\\n    margin: 3px 0;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.burger {\\r\\n    color: #fff;\\r\\n    display: none;\\r\\n    font-size: 26px;\\r\\n}\\r\\n\\r\\n.active {\\r\\n    background-color: #004AF2;\\r\\n}\\r\\n\\r\\n/* Description */\\r\\n.description {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    color: #fff;\\r\\n\\r\\n}\\r\\n\\r\\n.city {\\r\\n    margin: 100px auto 0;\\r\\n    font-size: 80px;\\r\\n}\\r\\n\\r\\n.weatherDescription {\\r\\n    margin: 100px auto 0;\\r\\n    font-size: 50px;\\r\\n}\\r\\n\\r\\n\\r\\n/* Weather data */\\r\\n.weather {\\r\\n    margin: 100px auto 0;\\r\\n}\\r\\n\\r\\n.weather__inner {\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n}\\r\\n\\r\\n.values {\\r\\n    color: #fff;\\r\\n    font-size: 50px;\\r\\n}\\r\\n\\r\\n.weather__dataWrapper {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n/* Media */\\r\\n\\r\\n@media(max-width: 900px) {\\r\\n    .nav {\\r\\n        display: none;\\r\\n        height: auto;\\r\\n        min-height: calc(100vh - 80px);\\r\\n        width: 100%;\\r\\n        padding-top: 9px;\\r\\n        position: absolute;\\r\\n        top: 100%;\\r\\n        left: 0;\\r\\n        right: 0;\\r\\n        z-index: 1;\\r\\n        flex-direction: column;\\r\\n        background-color: rgba(0, 0, 0, 0.85);\\r\\n    }\\r\\n\\r\\n    .nav__link {\\r\\n        display: block;\\r\\n        padding: 10px 15px;\\r\\n        text-align: right;\\r\\n    }\\r\\n\\r\\n    .burger {\\r\\n        display: block;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media(max-width: 650px) {\\r\\n    .weather__inner {\\r\\n        flex-direction: column;\\r\\n    }\\r\\n\\r\\n    .weather__dataWrapper {\\r\\n        margin-bottom: 30px;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media(max-width: 450px) {\\r\\n    .city {\\r\\n        font-size: 50px;\\r\\n    }\\r\\n\\r\\n    .weatherDescription {\\r\\n        margin-top: 25px;\\r\\n        font-size: 30px;\\r\\n    }\\r\\n\\r\\n    .weather {\\r\\n        margin-top: 30px;\\r\\n    }\\r\\n\\r\\n    .values {\\r\\n        font-size: 35px;\\r\\n    }\\r\\n\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/main.css\"],\"names\":[],\"mappings\":\"AAAA;;;IAGI,sBAAsB;IACtB,SAAS;IACT,UAAU;AACd;AACA,cAAc;AACd;IACI,WAAW;IACX,iBAAiB;IACjB,cAAc;IACd,eAAe;AACnB;;AAEA,eAAe;AACf;IACI,eAAe;IACf,MAAM;IACN,OAAO;IACP,eAAe;IACf,gBAAgB;IAChB,cAAc;AAClB;;AAEA;IACI,eAAe;IACf,MAAM;IACN,OAAO;IACP,eAAe;IACf,gBAAgB;IAChB,cAAc;IACd,0CAA0C;IAC1C,kCAAkC;AACtC;;AAEA,WAAW;AACX;IACI,YAAY;IACZ,oCAAoC;;IAEpC,eAAe;IACf,MAAM;IACN,OAAO;IACP,QAAQ;IACR,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,YAAY;IACZ,eAAe;AACnB;;AAEA,QAAQ;AACR;IACI,aAAa;IACb,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,eAAe;IACf,WAAW;IACX,qBAAqB;AACzB;;AAEA;IACI,eAAe;IACf,yBAAyB;AAC7B;;AAEA,aAAa;AACb;IACI,WAAW;AACf;;AAEA;IACI,eAAe;IACf,0BAA0B;AAC9B;;AAEA;IACI,eAAe;IACf,0BAA0B;AAC9B;;AAEA;IACI,kBAAkB;IAClB,cAAc;IACd,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,OAAO;IACP,UAAU;AACd;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,SAAS;IACT,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,yBAAyB;AAC7B;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,aAAa;IACb,eAAe;AACnB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA,gBAAgB;AAChB;IACI,aAAa;IACb,sBAAsB;IACtB,WAAW;;AAEf;;AAEA;IACI,oBAAoB;IACpB,eAAe;AACnB;;AAEA;IACI,oBAAoB;IACpB,eAAe;AACnB;;;AAGA,iBAAiB;AACjB;IACI,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,WAAW;IACX,eAAe;AACnB;;AAEA;IACI,kBAAkB;AACtB;;AAEA,UAAU;;AAEV;IACI;QACI,aAAa;QACb,YAAY;QACZ,8BAA8B;QAC9B,WAAW;QACX,gBAAgB;QAChB,kBAAkB;QAClB,SAAS;QACT,OAAO;QACP,QAAQ;QACR,UAAU;QACV,sBAAsB;QACtB,qCAAqC;IACzC;;IAEA;QACI,cAAc;QACd,kBAAkB;QAClB,iBAAiB;IACrB;;IAEA;QACI,cAAc;IAClB;AACJ;;AAEA;IACI;QACI,sBAAsB;IAC1B;;IAEA;QACI,mBAAmB;IACvB;AACJ;;AAEA;IACI;QACI,eAAe;IACnB;;IAEA;QACI,gBAAgB;QAChB,eAAe;IACnB;;IAEA;QACI,gBAAgB;IACpB;;IAEA;QACI,eAAe;IACnB;;AAEJ\",\"sourcesContent\":[\"*,\\r\\n*:before,\\r\\n*:after {\\r\\n    box-sizing: border-box;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n/* Container */\\r\\n.container {\\r\\n    width: 100%;\\r\\n    max-width: 1230px;\\r\\n    margin: 0 auto;\\r\\n    padding: 0 15px;\\r\\n}\\r\\n\\r\\n/* Background */\\r\\n.video-bg {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    min-width: 100%;\\r\\n    min-height: 100%;\\r\\n    z-index: -1000;\\r\\n}\\r\\n\\r\\n.background {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    min-width: 100%;\\r\\n    min-height: 100%;\\r\\n    z-index: -1000;\\r\\n    /* background-color: rgba(0, 0, 0, 0.2); */\\r\\n    background-color: rgba(83, 83, 83);\\r\\n}\\r\\n\\r\\n/* Header */\\r\\n.header {\\r\\n    height: 80px;\\r\\n    background-color: rgba(0, 0, 0, 0.3);\\r\\n\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    z-index: 1000;\\r\\n}\\r\\n\\r\\n.header__inner {\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    align-items: center;\\r\\n    height: 80px;\\r\\n    font-size: 16px;\\r\\n}\\r\\n\\r\\n/* Nav */\\r\\n.nav {\\r\\n    display: flex;\\r\\n    height: 100%;\\r\\n    font-size: 18px;\\r\\n}\\r\\n\\r\\n.nav__link {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    padding: 0 10px;\\r\\n    color: #fff;\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\n.nav__link:hover {\\r\\n    cursor: pointer;\\r\\n    background-color: #004AF2;\\r\\n}\\r\\n\\r\\n/* Location */\\r\\n.location {\\r\\n    color: #fff;\\r\\n}\\r\\n\\r\\n.location__get__btn:hover {\\r\\n    cursor: pointer;\\r\\n    text-decoration: underline;\\r\\n}\\r\\n\\r\\n.location__change__btn:hover {\\r\\n    cursor: pointer;\\r\\n    text-decoration: underline;\\r\\n}\\r\\n\\r\\n.location__change__wrapper {\\r\\n    position: relative;\\r\\n    display: block;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.errorMessage {\\r\\n    position: absolute;\\r\\n    top: 38px;\\r\\n    left: 0;\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n.location__change__find {\\r\\n    width: 200px;\\r\\n    position: absolute;\\r\\n    top: 38px;\\r\\n    background-color: #fff;\\r\\n}\\r\\n\\r\\n.finded-city {\\r\\n    padding: 5px;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.finded-city:hover {\\r\\n    cursor: pointer;\\r\\n    background-color: #004AF2;\\r\\n}\\r\\n\\r\\n.input-city {\\r\\n    width: 200px;\\r\\n    height: 25px;\\r\\n    margin: 3px 0;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.burger {\\r\\n    color: #fff;\\r\\n    display: none;\\r\\n    font-size: 26px;\\r\\n}\\r\\n\\r\\n.active {\\r\\n    background-color: #004AF2;\\r\\n}\\r\\n\\r\\n/* Description */\\r\\n.description {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    color: #fff;\\r\\n\\r\\n}\\r\\n\\r\\n.city {\\r\\n    margin: 100px auto 0;\\r\\n    font-size: 80px;\\r\\n}\\r\\n\\r\\n.weatherDescription {\\r\\n    margin: 100px auto 0;\\r\\n    font-size: 50px;\\r\\n}\\r\\n\\r\\n\\r\\n/* Weather data */\\r\\n.weather {\\r\\n    margin: 100px auto 0;\\r\\n}\\r\\n\\r\\n.weather__inner {\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n}\\r\\n\\r\\n.values {\\r\\n    color: #fff;\\r\\n    font-size: 50px;\\r\\n}\\r\\n\\r\\n.weather__dataWrapper {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n/* Media */\\r\\n\\r\\n@media(max-width: 900px) {\\r\\n    .nav {\\r\\n        display: none;\\r\\n        height: auto;\\r\\n        min-height: calc(100vh - 80px);\\r\\n        width: 100%;\\r\\n        padding-top: 9px;\\r\\n        position: absolute;\\r\\n        top: 100%;\\r\\n        left: 0;\\r\\n        right: 0;\\r\\n        z-index: 1;\\r\\n        flex-direction: column;\\r\\n        background-color: rgba(0, 0, 0, 0.85);\\r\\n    }\\r\\n\\r\\n    .nav__link {\\r\\n        display: block;\\r\\n        padding: 10px 15px;\\r\\n        text-align: right;\\r\\n    }\\r\\n\\r\\n    .burger {\\r\\n        display: block;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media(max-width: 650px) {\\r\\n    .weather__inner {\\r\\n        flex-direction: column;\\r\\n    }\\r\\n\\r\\n    .weather__dataWrapper {\\r\\n        margin-bottom: 30px;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media(max-width: 450px) {\\r\\n    .city {\\r\\n        font-size: 50px;\\r\\n    }\\r\\n\\r\\n    .weatherDescription {\\r\\n        margin-top: 25px;\\r\\n        font-size: 30px;\\r\\n    }\\r\\n\\r\\n    .weather {\\r\\n        margin-top: 30px;\\r\\n    }\\r\\n\\r\\n    .values {\\r\\n        font-size: 35px;\\r\\n    }\\r\\n\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./main.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./main.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import getData from \"./services\";\r\n\r\nconst changeLocation = (weatherFunc) => {\r\n    const inputCity = document.querySelector('.input-city'),\r\n          yourLocation = document.querySelector('.location__city'),\r\n          btnChangeLocation = document.querySelector('.location__change__btn'),\r\n          btnGetLocation = document.querySelector('.location__get__btn'),\r\n          navLink = document.querySelectorAll('.nav__link');\r\n\r\n    const {getLocation, getCityLocation} = getData();\r\n\r\n    navLink.forEach(link => {\r\n        link.addEventListener('click', (e) => {\r\n            console.log(e.currentTarget)\r\n            link.classList.add('active');\r\n        })\r\n    })\r\n\r\n \r\n    getLocation().then((res) => {\r\n        console.log(res)\r\n        if (!localStorage.getItem('city')) {\r\n            setLocationToLocalStorage(res.city, res.lat, res.lon);\r\n            yourLocation.textContent = `Current location: ${res.city}`;\r\n            weatherFunc(res.lat, res.lon);\r\n        } else {\r\n            console.log(localStorage.getItem('city'))\r\n            yourLocation.textContent = `Current location: ${localStorage.getItem('city')}`;\r\n            weatherFunc(localStorage.getItem('lat'), localStorage.getItem('lon'));\r\n        }\r\n    })\r\n    \r\n    const setLocationToLocalStorage = (city, lat, lon) => {\r\n      localStorage.setItem('city', city);\r\n      localStorage.setItem('lat', lat);\r\n      localStorage.setItem('lon', lon);\r\n    }\r\n    \r\n    // // Change location toggle\r\n    // btnChangeLocation.addEventListener('click', () => {\r\n    //   document.querySelector('.location__change__wrapper').style.display = 'flex';\r\n    //   btnChangeLocation.style.display = 'none'\r\n    \r\n    // })\r\n    \r\n    // Get location btn\r\n    btnGetLocation.addEventListener('click', () => {\r\n      getLocation().then((res) => {\r\n          setLocationToLocalStorage(res.city, res.lat, res.lon);\r\n          console.log(res.city)\r\n          yourLocation.textContent = `Current location: ${res.city}`;\r\n            weatherFunc(res.lat, res.lon);\r\n      })\r\n    })\r\n    \r\n    // Change location onEnter\r\n    inputCity.addEventListener('keydown', (e) => {\r\n      if (e.keyCode == 13) {\r\n          if (document.querySelector('.errorMessage')) {\r\n              document.querySelector('.errorMessage').remove();\r\n          }\r\n          getCityLocation(inputCity.value).then((res) => {\r\n              if (Object.values(res).length === 1) {\r\n                  const errorMessage = document.createElement('label');\r\n                  errorMessage.classList.add('errorMessage');\r\n                  errorMessage.textContent = 'City not found';\r\n                  inputCity.after(errorMessage)\r\n              } else {\r\n                  setLocationToLocalStorage(res.results[0].name, res.results[0].latitude, res.results[0].longitude);\r\n                  yourLocation.textContent = `Current location: ${res.results[0].name}`;\r\n                    weatherFunc(res.results[0].latitude, res.results[0].longitude)\r\n                //   document.querySelector('.location__change__wrapper').style.display = 'none';\r\n                //   btnChangeLocation.style.display = 'block'\r\n                  clearFindData();\r\n              }\r\n          })\r\n      }\r\n    })\r\n    \r\n    // Find location on input\r\n    inputCity.addEventListener('input', () => {\r\n      \r\n          if (document.querySelector('.errorMessage')) {\r\n              document.querySelector('.errorMessage').remove();\r\n          }\r\n          if (document.querySelector('.finded-city')) {\r\n              document.querySelectorAll('.finded-city').forEach(elem => {\r\n                  elem.remove();\r\n              })\r\n          }\r\n          getCityLocation(inputCity.value).then((res) => {\r\n              if (Object.values(res).length === 1) {\r\n                  const errorMessage = document.createElement('label');\r\n                  errorMessage.classList.add('errorMessage');\r\n                  errorMessage.textContent = 'City not found';\r\n                  inputCity.after(errorMessage)\r\n              } else {\r\n                  res.results.forEach(el => {\r\n                      const div = document.createElement('div');\r\n                      div.classList.add('finded-city');\r\n                      div.textContent = `${el.name}  ${el.country_code}`;\r\n                      document.querySelector('.location__change__find').append(div)\r\n                      div.addEventListener('click', () => {\r\n                          console.log(el)\r\n                          setLocationToLocalStorage(el.name, el.latitude, el.longitude);\r\n                          yourLocation.textContent = `Current location: ${el.name}`;\r\n                            weatherFunc(el.latitude, el.longitude);\r\n                        //   document.querySelector('.location__change__wrapper').style.display = 'none';\r\n                        //   btnChangeLocation.style.display = 'block'\r\n                          clearFindData();\r\n                      })\r\n                  });\r\n              }\r\n          })\r\n    })\r\n    \r\n    const clearFindData = () => {\r\n      if (document.querySelector('.errorMessage')) {\r\n          document.querySelector('.errorMessage').remove();\r\n      }\r\n      if (document.querySelector('.finded-city')) {\r\n          document.querySelectorAll('.finded-city').forEach(elem => {\r\n              elem.remove();\r\n          })\r\n      }\r\n      inputCity.value = '';\r\n    }\r\n}\r\n\r\nexport default changeLocation;","export const weatherDescription = {\r\n    0: 'Clear sky',\r\n    1: 'Mainly clear',\r\n    2: 'Partly cloudy',\r\n    3: 'Overcast',\r\n    45: 'Fog and depositing rime fog',\r\n    48: 'Fog and depositing rime fog',\r\n    51: 'Drizzle: light',\r\n    53: 'Drizzle: moderate',\r\n    55: 'Drizzle: dense intensity',\r\n    56: 'Freezing Drizzle: ligth',\r\n    57: 'Freezing Drizzle: dense intensity',\r\n    61: 'Rain: slight',\r\n    63: 'Rain: moderate',\r\n    65: 'Rain: heavy intensity',\r\n    66: 'Freezing Rain:: light',\r\n    67: 'Freezing Rain:: heavy intensity',\r\n    71: 'Snow fall: slight',\r\n    73: 'Snow fall: moderate',\r\n    75: 'Snow fall: heavy intensity',\r\n    77: 'Snow grains',\r\n    80: 'Rain showers: slight',\r\n    81: 'Rain showers: moderate',\r\n    82: 'Rain showers: violent',\r\n    85: 'Snow showers slight',\r\n    86: 'Snow showers heavy',\r\n    95: 'Thunderstorm: Slight or moderate',\r\n    96: 'hunderstorm with slight',\r\n    99: 'hunderstorm with heavy hail',\r\n}\r\n\r\nexport const CHART_COLORS = {\r\n    red: 'rgb(255, 99, 132)',\r\n    orange: 'rgb(255, 159, 64)',\r\n    yellow: 'rgb(255, 205, 86)',\r\n    green: 'rgb(75, 192, 192)',\r\n    blue: 'rgb(54, 162, 235)',\r\n    purple: 'rgb(153, 102, 255)',\r\n    grey: 'rgb(201, 203, 207)'\r\n};\r\n","export const  request = async (url) => {\r\n    let res = await fetch(url)\r\n    let data = await res.json();\r\n    return data;\r\n} ","import { request } from \"./http\";\r\n\r\nfunction getData() {\r\n    const getLocation = () => {\r\n        const data = request('https://api.ipgeolocation.io/ipgeo?apiKey=17a8d753063e4a20a9531fe3638de576');\r\n        // function success(pos) {\r\n        //     var crd = pos.coords;\r\n        //     console.log('Ваше текущее местоположение:');\r\n        //     console.log(`Широта: ${crd.latitude}`);\r\n        //     console.log(`Долгота: ${crd.longitude}`);\r\n        //     console.log(`Плюс-минус ${crd.accuracy} метров.`);\r\n        //     console.log(crd);\r\n        //   };\r\n\r\n        //   navigator.geolocation.getCurrentPosition(success)\r\n          \r\n          return data.then(res => {\r\n            return {\r\n                city: res.city,\r\n                lat: res.latitude,\r\n                lon: res.longitude,\r\n            }\r\n          })\r\n        // return data;\r\n    }\r\n\r\n    // \r\n    // http://ip-api.com/json/\r\n\r\n    const getCityLocation = (city) => {\r\n        const data = request(`https://geocoding-api.open-meteo.com/v1/search?name=${city}`);\r\n        return data;\r\n    }\r\n\r\n    const getLastDate = () => {\r\n        const date = new Date();\r\n        const year = date.getFullYear();\r\n        const month = date.getMonth();\r\n        const day = date.getDate();\r\n        const lastDate = new Date(year, month, day + 15);\r\n        const lastYear = lastDate.getFullYear();\r\n        const lastmonth = lastDate.getMonth();\r\n        const lastDay = lastDate.getDate();\r\n        const transformLastDate = `${lastYear}-${(lastmonth + 1) < 10 ? `0${(lastmonth + 1)}` : (lastmonth + 1)}-${lastDay < 10 ? `0${lastDay}` : lastDay}`;\r\n        console.log(transformLastDate);\r\n        return transformLastDate;\r\n    }\r\n\r\n    const getCurrentDate = () => {\r\n        const date = new Date();\r\n        const year = date.getFullYear();\r\n        const month = date.getMonth();\r\n        const day = date.getDate();\r\n        const currentDate = `${year}-${(month + 1) < 10 ? `0${(month + 1)}` : (month + 1)}-${day < 10 ? `0${day}` : day}`;\r\n        // console.log(currentDate);\r\n        return currentDate;\r\n    }\r\n\r\n    // const sunCalk = () => {\r\n    //     const coefficent = 100 / 60;\r\n    //     console.log(coefficent)\r\n    //     const timeArr = [];\r\n    //     const sunArr = [];\r\n    //     let hour = 0;\r\n    //     let minutes = 0;\r\n    //     let sun = 0\r\n    //     for (let i = 0; i < 1440; i++) {\r\n    //         sunArr.push(sun)\r\n    //         sun += coefficent;\r\n    //     }\r\n    //     console.log(sunArr)\r\n\r\n    //     for (let i = 0; i < 1463; i++) {\r\n    //         if (minutes < 60) {\r\n    //             timeArr.push((hour <= 9 ? '0' + hour : hour) + ':' + (minutes <= 9 ? '0' + minutes : minutes))\r\n    //             minutes++;\r\n    //         } else {\r\n    //             hour++;\r\n    //             minutes = 0;\r\n    //         }\r\n    //     }\r\n    //     return timeArr;\r\n    // }\r\n\r\n    // sunCalk()\r\n\r\n    const getWeather = (lat, lon, day = getCurrentDate()) => {\r\n        const data = request(`https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&hourly=temperature_2m,relativehumidity_2m,precipitation,weathercode,pressure_msl,surface_pressure,windspeed_10m,winddirection_10m&daily=weathercode,temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,precipitation_sum,windspeed_10m_max,windgusts_10m_max,winddirection_10m_dominant&timezone=Europe%2FMoscow&start_date=${day}&end_date=${getLastDate()}`);\r\n        data.then(console.log)\r\n        console.log(day);\r\n        return transformWeatherData(data);\r\n    } \r\n\r\n    const transformWeatherData = (data) => {\r\n        const hour = new Date().getHours()\r\n        return data.then((res) => {\r\n            let result = {\r\n                currentTemp: res.hourly.temperature_2m[hour],\r\n                currentMoi: res.hourly.relativehumidity_2m[hour],\r\n                currentPrecipitation: res.hourly.precipitation[hour],\r\n                wind: res.hourly.windspeed_10m[hour],\r\n                sunrise: res.daily.sunrise[0].slice(-5),\r\n                sunset: res.daily.sunset[0].slice(-5),\r\n                weathercode: res.hourly.weathercode[hour],\r\n                dailyTemp: res.hourly.temperature_2m.slice(0, 24),\r\n                dailyMoi: res.hourly.relativehumidity_2m.slice(0, 24),\r\n                dailyWind: res.hourly.windspeed_10m.slice(0, 24),\r\n                dailyWindDir: res.hourly.winddirection_10m.slice(0, 24),\r\n                dailyPressure: res.hourly.pressure_msl.slice(0, 24),\r\n                dailyTime: res.hourly.time.slice(0, 24).map(item => item.slice(-5)),\r\n            }\r\n            return result;\r\n        })\r\n    }\r\n\r\n    return {getLocation, getCityLocation, getWeather};\r\n}\r\n\r\nexport default getData;"],"names":[],"sourceRoot":""}